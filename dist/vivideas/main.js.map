{"version":3,"sources":["./src/app/list-codes/list-codes.component.html","./src/app/list-codes/list-codes.component.ts","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/master/master.component.ts","./src/app/master/master.component.html","./src/app/main.service.ts","./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/unique-codes/unique-codes.component.ts","./src/app/unique-codes/unique-codes.component.html","./src/app/app.module.ts","./src/app/auth.guard.ts","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["<html>\n    <body>\n        Select Product Id:\n        <select (change)=\"product_change($event.target.value)\">\n            <option *ngFor=\"let p of product\" value={{p.productid}} >{{p.productid}}</option>\n        </select>\n\n        <table *ngIf=\"items.length>0\">\n            <tr>\n                <td>Product ID</td>\n                <td>Batch no</td>\n                <td>MFG date</td>\n                <td>EXP Date</td>\n                <td>Unique Code</td>\n            </tr>\n            <tr *ngFor=\"let item of items\">\n                <td>{{item.productid}}</td>\n                <td>{{item.batchno}}</td>\n                <td>{{item.mfgdate}}</td>\n                <td>{{item.expdate}}</td>\n                <td>{{item.code}}</td>\n\n            </tr>\n        </table>\n    </body>\n</html>","import { Component, OnInit } from '@angular/core';\nimport {MainService} from '../main.service';\n@Component({\n  selector: 'app-list-codes',\n  templateUrl: './list-codes.component.html',\n  styleUrls: ['./list-codes.component.css']\n})\nexport class ListCodesComponent implements OnInit {\nproduct:any;\nitems:any =[];\n  constructor(private mainservice:MainService) { }\n\n  ngOnInit(): void {\n    this.getproduts();\n  }\n\n  getproduts(){\n    this.mainservice.getProduts()\n    .pipe()\n    .subscribe(\n      data =>{\n        console.log(\"productdata\",data);\n        this.product = data.status;\n        console.log(\"productdata\",this.product);\n\n      }\n    )\n  }\n\n  product_change(e){\n    console.log(\"ee\",e);\n    this.mainservice.getbatchno(e)\n    .pipe()\n    .subscribe(\n      data =>{\n        console.log(\"batch\",data);\n        this.items = data;\n      \n    })\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport {MainService} from '../main.service';\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  registerform: FormGroup;\n\n  constructor(private formBuilder:FormBuilder,private mainservice:MainService) { }\n\n  ngOnInit(): void {\n    this.registerform = this.formBuilder.group({\n      fullname:['',[Validators.required]],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required]],\n      usertype:['',[Validators.required]]\n    });\n  }\n\n  onLoggedin() {\n    if(this.registerform.invalid){\n      window.alert(\"Invalid Details\");\n      return;\n    }\n    console.log(\">>\"+this.registerform.value.fullname);\n    \n    this.mainservice.register(this.registerform.value)\n    .subscribe(\n      data =>{\n        if(data.success==\"email already registered\"){\n          window.alert(\"Email Already Registered!\");\n        }\n        else{\n          window.alert(\"Successfully Registered.\")\n        }\n       // console.log(\"reg data\",data);\n        this.registerform.reset();\n\n      }\n    )\n  }\n\n}\n","<body>\n    <form [formGroup]=\"registerform\" (ngSubmit)=\"onLoggedin()\">\n <div class=\"registerform\"> \n    <h2>Register Form</h2>\n    <table >\n        <tr>\n            <td>Full Name: </td>\n            <td><input formControlName=\"fullname\"></td>\n        </tr>\n        <tr>\n            <td>email: </td>\n            <td><input formControlName=\"email\"></td>\n        </tr>\n        <tr>\n            <td>Password: </td>\n            <td><input formControlName=\"password\"></td>\n        </tr>\n        <tr>\n            <td>User Type:</td>\n            <select formControlName=\"usertype\">\n                <option value=\"Admin\">Admin</option>\n                <option value=\"customer\">Customer</option>\n            </select>\n        </tr>\n        <tr>\n            <td style=\"font-size: 12px;\">\n                Already Registered? <a routerLink=\"/login\">Login Here</a>\n            </td>\n            <td>\n                <button >Register</button>\n            </td>\n        </tr>\n    </table>\n</div> \n</form>\n\n</body>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport {MainService} from '../main.service';\nimport {Router} from '@angular/router'\n@Component({\n  selector: 'app-master',\n  templateUrl: './master.component.html',\n  styleUrls: ['./master.component.css']\n})\nexport class MasterComponent implements OnInit {\nproductform:FormGroup;\nfile:any;\n  constructor(private mainservice:MainService,private formbuilder:FormBuilder,private router:Router) { }\n\n  ngOnInit(): void {\n    this.productform = this.formbuilder.group({\n      pid:['',[Validators.required]],\n      pname:['',[Validators.required]],\n      pimage:['',[Validators.required]]\n    })\n  }\n\n  imageupload(e){\n     this.file = e.target.files[0];\n     this.productform.patchValue({imageupload:this.file})\n    console.log(\"file\",this.productform.value);\n  }\n  product_save(){\n    console.log(this.productform.value);\n    this.mainservice.product_save(this.productform.value,this.file)\n    .pipe()\n    .subscribe(\n      data =>{\n        console.log(data);\n      }\n    )\n  }\n\n  gcodebtn(){\n    this.router.navigate(['/unique_codes']);\n  }\n\n\n}\n","<html>\n    <body>\n        <h1>Add New Product</h1> <button (click)=\"gcodebtn()\">Generate Unique Codes</button>\n        <form class=\"productform\" [formGroup]=\"productform\" (ngSubmit)=\"product_save()\">\n            <table>\n            <tr>\n                <td>Product ID:</td>\n                <td><input type=\"text\" formControlName=\"pid\"></td>\n            </tr>\n            <tr>\n                <td>Product Name:</td>\n                <td><input type=\"text\" formControlName=\"pname\"></td>\n            </tr>\n            <tr>\n                <td>Product Image:</td>\n                <td><input type=\"file\" formControlName=\"pimage\" (change)=\"imageupload($event)\"></td>\n            </tr>\n            <tr>\n                <button>Save</button>\n            </tr>\n            </table>\n        </form>\n    </body>\n</html>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\n@Injectable({\n  providedIn: 'root'\n})\nexport class MainService {\n\n  constructor(private http: HttpClient) { }\n\n  register(regdata) {\n    console.log(\"Ser\", regdata);\n    return this.http.post<any>('/register', { data: regdata })\n      .pipe(map(data => {\n        return data;\n      }))\n  }\n\n  login(logindata) {\n    return this.http.post<any>('/login', { data: logindata })\n      .pipe(map(data => {\n        return data;\n      }))\n  }\n\n  product_save(data, file) {\n    return this.http.post<any>('/saveproduct', { data: data, file: file })\n      .pipe(map(data => {\n        return data;\n      }))\n  }\n\n  getProduts() {\n    return this.http.get<any>('/getproduts')\n      .pipe(map(data => {\n        return data;\n      }))\n  }\n\n  getbatchno(pid) {\n    return this.http.post<any>('/getbatchno', { data: pid })\n      .pipe(map(data => {\n        return data;\n      }))\n  }\n\n  generate_codes(info) {\n    return this.http.post<any>('/generate_codes', info)\n      .pipe(map(data => {\n        return data;\n      }))\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'vivideas';\n}\n","<router-outlet></router-outlet>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport {MainService} from '../main.service';\nimport { Router} from '@angular/router';\n@Component({\n  selector: 'app-unique-codes',\n  templateUrl: './unique-codes.component.html',\n  styleUrls: ['./unique-codes.component.css']\n})\nexport class UniqueCodesComponent implements OnInit {\ngeneratedcodes:any=[];\ncode_form:FormGroup;\n  constructor(private mainservice:MainService, private formbuilder:FormBuilder,private router:Router) { }\n\n  ngOnInit(): void {\n  this.code_form = this.formbuilder.group({\n    pid:['',[Validators.required]],\n    pbatch:['',[Validators.required]],\n    expdate:['',[Validators.required]],\n    mfgdate:['',[Validators.required]],\n    codes:['',[Validators.required]]\n  })  \n  }\n\n  generate_codes(){\n    this.mainservice.generate_codes(this.code_form.value)\n    .pipe()\n    .subscribe(\n      data=>{\n        this.generatedcodes = data\n      }\n    )\n  }\n\n  returntomaster(){\n    this.router.navigate(['/master'])\n  }\n}\n","<html>\n<body>\n    <button (click)=\"returntomaster()\">Return to master</button>\n    <form [formGroup]=\"code_form\" (ngSubmit)=\"generate_codes()\">\n        <table>\n            <tr>\n                <td>\n                    Product Id:<input type=\"text\" formControlName=\"pid\">\n                </td>\n            </tr>\n            <tr>\n                <td>\n                    Batch No:<input type=\"text\" formControlName=\"pbatch\">\n                </td>\n            </tr>\n            <tr>\n                <td>\n                    MFG Date<input type=\"text\" formControlName=\"mfgdate\">\n                </td>\n            </tr>\n            <tr>\n                <td>\n                    EXP Date:<input type=\"text\" formControlName=\"expdate\">\n                </td>\n            </tr>\n            <tr>\n                <td>\n                    No of unique codes:<input type=\"text\" formControlName=\"codes\">\n                </td>\n            </tr>\n            <tr>\n                <button>Generate codes</button>\n            </tr>\n        </table>\n    </form>\n\n    <table *ngIf=\"generatedcodes.length>0\">\n        <tr>\n            <td>Product ID</td>\n            <td>Batch No.</td>\n            <td>MFG Date</td>\n            <td>EXP Date</td>\n            <td>Unique Code</td>\n        </tr>\n        <tr *ngFor=\"let product of generatedcodes\">\n            <td>\n               {{product.productid}}\n            </td>\n            <td>\n                {{product.batchno}}\n             </td>\n             <td>\n                {{product.mfgdate}}\n             </td>\n             <td>\n                {{product.expdate}}\n             </td>\n             <td>\n                {{product.code}}\n             </td>\n        </tr>    \n    </table>\n\n</body>\n</html>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { MasterComponent } from './master/master.component';\nimport { UniqueCodesComponent } from './unique-codes/unique-codes.component';\nimport { ListCodesComponent } from './list-codes/list-codes.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule} from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MasterComponent,\n    UniqueCodesComponent,\n    ListCodesComponent,\n    LoginComponent,\n    RegisterComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule, ReactiveFormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  canActivate(){\n    //auth\n    return true;\n  }\n  \n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ListCodesComponent } from './list-codes/list-codes.component';\nimport { LoginComponent } from './login/login.component';\nimport { MasterComponent } from './master/master.component';\nimport { RegisterComponent } from './register/register.component';\nimport { UniqueCodesComponent } from './unique-codes/unique-codes.component';\nimport { AuthGuard} from './auth.guard';\nconst routes: Routes = [\n  {\n    path:'master',\n    component:MasterComponent,\n    canActivate:[AuthGuard]\n  },\n  {\n    path:'unique_codes',\n    component:UniqueCodesComponent,\n    canActivate:[AuthGuard]\n\n  },\n  {\n    path:'list_codes',\n    component:ListCodesComponent,\n    canActivate:[AuthGuard]\n \n  },\n  {\n    path:'register',\n    component:RegisterComponent\n  },\n  {\n    path:'login',\n    component:LoginComponent\n  },\n  {\n    path:'**',\n    component:LoginComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes,{useHash:true})],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport {MainService} from '../main.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  loginForm:FormGroup;\n  constructor(private mainservice:MainService,private formbuilder:FormBuilder,private router:Router) { }\n\n  ngOnInit(): void {\n    this.loginForm = this.formbuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required]],\n    })\n  }\n\n  login(){\n    this.mainservice.login(this.loginForm.value)\n    .pipe()\n    .subscribe(\n      data =>{\n        if(data.success==false){\n          window.alert(\"invalid user\");\n        }\n        else{\n          localStorage.setItem('isLoggedin', 'true');\n          localStorage.setItem('token', JSON.stringify(data.data));\n          this.router.navigate(['/master']);\n        }\n      }\n    )\n  }\n\n}\n","<html>\n  <body>\n      <form [formGroup]=\"loginForm\" (ngSubmit)=\"login()\">\n      <div class=\"loginform\">\n    <h2> Login Form </h2>\n        <table>\n            <tr>\n                <td>email: </td>\n                <td><input formControlName=\"email\"></td>\n            </tr>\n            <tr>\n                <td>password:</td>\n                <td><input formControlName=\"password\"></td>\n            </tr>\n            <tr>\n                <td>\n                    <span>new user? <a routerLink=\"/register\">Register</a>&nbsp;&nbsp;</span>\n                </td>\n                <td>\n                    <button>Login</button>\n                </td>\n            </tr>\n        </table>\n        </div>\n        </form>\n  </body>\n  \n</html>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}